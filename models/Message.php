<?php

namespace Guest\Models;

/// File automatically generated by the Zule Framework Generator (ZULG).
/// Creation date: 2012-07-16 18:58:24

class Message extends \Zule\Models\Model
{
    
    public function awaken()
    {
        // Perform tasks that should happen after data is initialized
        
        $this->awake = yes;
    }
    
        /// PLACE ALL CUSTOM LOGIC ABOVE THIS LINE. IF YOU NEED TO MODIFY
    /// A FUNCTION BELOW, COPY AND PASTE IT ABOVE THIS LINE AND GIVE
    /// IT A NEW NAME.
    /// DO NOT MODIFY BELOW THIS LINE. FILE GENERATION WILL DESTROY 
    /// NON-FRAMEWORK CHANGES BELOW THIS LINE. YOU HAVE BEEN WARNED
    /// IF YOU REMOVE THIS LINE, ENTIRE FILE WILL BE TRUNCATED
    /// ZULG END OF DEFINITIONS
    // Redis key
    private $key;
    
    // Control vars
    private $from;
    private $text;
    private $bumps;
        
    // $safe is a sanitized array, e.g. all values in safe
    // are assumed to be non-corrupted data.
    public function save(array $safe)
    {
        if ( array_key_exists('from', $safe) )
        {
            $this->from = $safe['from'];
        }
        
        if ( array_key_exists('text', $safe) )
        {
            $this->text = $safe['text'];
        }
        
        if ( array_key_exists('bumps', $safe) )
        {
            $this->bumps = $safe['bumps'];
        }
        
                
        $this->getGateway()->save();
    }
    
    public function getKey()
    {
        return $this->key;
    }
    
    public function setKey($key)
    {
        if ( !$this->awake )
        {
            $this->key = $key;
        }
        else
        {
            throw new \Zule\Tools\Exception(
                'Redis key "$key" can only be set when object is asleep.'
            );
        }
    }
    
    public function setAllByArray(array $inArray)
    {
                        $this->from = $inArray['from'];
                                $this->text = $inArray['text'];
                                $this->bumps = $inArray['bumps'];
                    }
    
    public function getFrom()
    {
        return $this->from;
    }
    
        
    public function getText()
    {
        return $this->text;
    }
    
        
    public function getBumps()
    {
        return $this->bumps;
    }
    
        
        
}
